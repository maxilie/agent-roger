import {
  mysqlTable,
  serial,
  text,
  boolean,
  json,
  int,
  timestamp,
} from "drizzle-orm/mysql-core";

/**
 * Task data.
 */
export const tasks = mysqlTable("tasks", {
  // id
  taskID: serial("id").primaryKey(),
  // status
  paused: boolean("paused").notNull().default(false),
  success: boolean("success"),
  dead: boolean("dead").notNull().default(false),
  lastEndedStage: int("current_stage").notNull().default(-1),
  lastInteractionMarker: text("last_interaction_marker"),
  // task definition
  isAbstract: boolean("is_abstract").notNull().default(false),
  parentID: int("parent_id"),
  taskDefinition: json("task_definition").notNull(),
  initialInputFields: json("initial_input_fields"),
  initialContextFields: json("initial_context_fields"),
  initialContextSummary: text("initial_context_summary"),
  memoryBankID: text("memory_bank_id"),
  // timestamps
  timeCreated: timestamp("time_created").notNull().defaultNow(),
  timeLastUpdated: timestamp("time_last_updated").notNull().defaultNow(),
  // task data
  resultData: json("result_data"),
  runtimeErrors: json("runtime_errors"),
  stage0Data: json("stage_0_data"),
  stage1Data: json("stage_1_data"),
  stage2Data: json("stage_2_data"),
  stage3Data: json("stage_3_data"),
  stage4Data: json("stage_4_data"),
  stage5Data: json("stage_5_data"),
  stage6Data: json("stage_6_data"),
  stage7Data: json("stage_7_data"),
  stage8Data: json("stage_8_data"),
  stage9Data: json("stage_9_data"),
  stage10Data: json("stage_10_data"),
  stage11Data: json("stage_11_data"),
  stage12Data: json("stage_12_data"),
  stage13Data: json("stage_13_data"),
  stage14Data: json("stage_14_data"),
  stage15Data: json("stage_15_data"),
  stage16Data: json("stage_16_data"),
  stage17Data: json("stage_17_data"),
  stage18Data: json("stage_18_data"),
  stage19Data: json("stage_19_data"),
  stage20Data: json("stage_20_data"),
  stage21Data: json("stage_21_data"),
  stage22Data: json("stage_22_data"),
  stage23Data: json("stage_23_data"),
});

/**
 * AI training data.
 */
export const trainingData = mysqlTable("training_data", {
  id: serial("id").primaryKey(),
  inputChatMlMessages: text("input_messages").notNull(),
  outputChatMlMessage: text("output_message").notNull(),
  categoryTag: text("category_tag").notNull(),
  qualityRating: int("quality_rating").notNull().default(1),
});

/**
 * AI input & output to be injected into similar prompts.
 */
export const injectedPrompts = mysqlTable("injected_prompts", {
  id: serial("id").primaryKey(),
  userMessage: text("user_message").notNull(),
  assistantMessage: text("assistant_message").notNull(),
  numTokens: int("num_tokens").notNull().default(0),
});
export const newInjectedPrompts = mysqlTable("new_injected_prompts", {
  id: serial("id").primaryKey(),
  idInMainTable: int("id_in_main_table").notNull(),
  userMessage: text("user_message").notNull(),
  assistantMessage: text("assistant_message").notNull(),
  numTokens: int("num_tokens").notNull().default(0),
});

/**
 * History of AI input & output generated by tasks.
 */
export const taskPromptHistory = mysqlTable("task_prompt_history", {
  id: serial("id").primaryKey(),
  associatedTaskID: int("associated_task_id").notNull(),
  systemMessage: text("system_message").notNull(),
  userMessage: text("user_message").notNull(),
  assistantMessage: text("assistant_message").notNull(),
  timestamp: timestamp("timestamp").notNull().defaultNow(),
  isUserMsgJson: boolean("is_user_msg_json").notNull().default(false),
});
